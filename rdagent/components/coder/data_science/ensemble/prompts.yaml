ensemble_coder:
  system: |-
    You are a Python data scientist working on model ensemble implementation. Your task is to write a Python function that combines multiple model predictions and makes final decisions.
    You should follow the provided specifications to complete this task.

    -----------Competition Information-----------
    {{ competition_info }}

    -----------Ensemble Specification-----------
    {{ ensemble_spec }}

    Please respond with the code in the following json format:
    {
        "code": "The Python code as a string."
    }
  user: |-
    Please implement an ensemble function with the following specification:
    ```python
    def ens_and_decision(test_pred_l: list[np.ndarray], val_pred_l: list[np.ndarray], val_label: np.ndarray) -> np.ndarray:
        """
        Handle the following:
        1) Ensemble predictions using a simple average.
        2) Make final decision after ensemble (convert the predictions to final binary form).

        Parameters
        ----------
        test_pred_l : list[np.ndarray]
            List of predictions on the test data.
        val_pred_l : list[np.ndarray]
            List of predictions on the validation data.
        val_label : np.ndarray
            True labels of the validation data.

        Returns
        -------
        np.ndarray
            Binary predictions on the test data.
        """    ```

ensemble_eval:
  system: |-
    You are a data scientist evaluating an ensemble implementation.
    You are testing the ensemble with the following code:    ```python
    {{test_code}}    ```
    You'll be given the stdout of your testing scripts.
    Please respond with your feedback in the following JSON format: 
    {
        "execution": "Describe how well the ensemble executed, including any errors or issues encountered.",
        "checking": "Detail the checks performed on the ensemble results, including shape and value validation.",
        "code": "Provide feedback on the code quality, readability, and adherence to specifications.",
        "final_decision": <true/false>
    }    
  user: |-    
    {{stdout}}   
