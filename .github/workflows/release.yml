name: Release
on:
  push:
    branches:
      - main
permissions:
  contents: read
jobs:
  release:
    permissions:
      contents: write
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          cache: pip
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine bump2version git-changelog
      - name: Bump version
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          bump2version patch
          echo "New version: $(cat VERSION)"
      - name: Push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push --follow-tags
      - name: Remove changelog to avoid file already exists error
        run: rm -v docs/changelog.md
      - name: Download changelog
        uses: actions/download-artifact@v4
        with:
          name: changelog
          path: docs/
      - name: Prepare release notes
        run: make release-notes > release-notes.md
      - id: prerelease
        name: Determine prerelease
        run: |
          if [[ "${{ github.ref }}" =~ (a|b|rc)(0|[1-9][0-9]*)?$ ]]; then
            echo "is_prerelease=true" > $GITHUB_OUTPUT
          else
            echo "is_prerelease=false" > $GITHUB_OUTPUT
          fi
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump_version.outputs.new_version }}
          release_name: Release ${{ steps.bump_version.outputs.new_version }}
          body_path: release-notes.md
          prerelease: ${{ steps.prerelease.outputs.is_prerelease }}
  package:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          cache: pip
          python-version: '3.10'
      - run: env | sort
      - run: make dev
      - run: make build
      - env:
          TWINE_NON_INTERACTIVE: true
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TESTPYPI_TOKEN }}
        run: make upload
